<% if job_invocation.resolved? %>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
    <tr>
      <th><%= _('Host') %></th>
      <th><%= _('Provider') %></th>
      <th><%= _('Status') %></th>
      <th><%= _('Actions') %></th>
    </tr>
    </thead>

    <tbody>
    <% hosts.each do |host| %>
      <% task = job_invocation.sub_task_for_host(host) %>
      <tr>
        <td><%= link_to_if_authorized host.name, hash_for_host_path(host).merge(:auth_object => host, :permission => :view_hosts) %></td>
        <%= render('host_provider_td', :host => host, :task => task) %>
        <%= render('host_status_td', :host => host, :task => task) %>
        <%= render('host_actions_td', :host => host, :task => task) %>
      </tr>
    <% end %>
    </tbody>
  </table>

  <%= will_paginate_with_info @hosts %>
<% else %>
  <div class="alert alert-warning">
    <%= _("The dynamic query '#{job_invocation.targeting.search_query}' was not resolved yet. The list of hosts to which it would resolve now can be seen") %>
    <%= link_to('here.', hosts_url(:search => job_invocation.targeting.search_query)) %>
  </div>
<% end %>
